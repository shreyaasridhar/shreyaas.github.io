{"version":3,"sources":["img/intro-bg.jpg","img/USC.jpg","img/Amrita.jpg","ShreyaaSridhar.pdf","components/Introduction/Introduction.js","components/Timeline/Timeline.js","components/Navigator/Navigator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","image_style","backgroundImage","cover","height","Introduction","props","state","id","className","style","Container","text","speed","eraseDelay","href","target","Component","Timeline","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","src","USC","alt","Caption","Amrita","display","justifyContent","class","Button","variant","Pdf","Navigator","Navbar","bg","fixed","Brand","Nav","Link","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cff2fff8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intro-bg.a6d64f57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/USC.10a169ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Amrita.000a8c55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ShreyaaSridhar.8c5600a2.pdf\";","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport cover from \"../../img/intro-bg.jpg\";\nimport \"./Introduction.css\";\n\nconst image_style = {\n  backgroundImage: `url(${cover})`,\n  height: \"100vh\",\n};\n\nclass Introduction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div\n        id=\"home\"\n        className=\"intro route bg-image overlay\"\n        style={image_style}\n      >\n        <div className=\"overlay-itro\"></div>\n        <div className=\"intro-content display-table\">\n          <div className=\"table-cell\">\n            <Container>\n              <h1 className=\"intro-title mb-4\">I am Shreyaa Sridhar</h1>\n              <ReactTypingEffect\n                className=\"intro-subtitle\"\n                text={[\n                  \"Student @ USC\",\n                  \"Web Developer\",\n                  \"Frontend Developer\",\n                  \"Python Programmer\",\n                  \"VR Enthusiast\",\n                  \"Singer\",\n                  \"Upcoming Flutist\",\n                ]}\n                speed={80}\n                eraseDelay={800}\n              />\n            </Container>\n          </div>\n        </div>\n        <div className=\"social\">\n          <a\n            href=\"https://github.com/naaficodes\"\n            target=\"https://www.linkedin.com/in/shreyaa-sridhar/\"\n          >\n            <i className=\"fab fa-github\"></i>\n          </a>\n          <a\n            href=\"https://Instagram.com/iam_naafi\"\n            target=\"https://www.linkedin.com/in/shreyaa-sridhar/\"\n          >\n            <i className=\"fab fa-instagram\"></i>\n          </a>\n          <a\n            href=\"https://www.facebook.com/abdul.w.naafi\"\n            target=\"https://www.linkedin.com/in/shreyaa-sridhar/\"\n          >\n            <i className=\"fab fa-facebook-f\"></i>\n          </a>\n          <a\n            href=\"https://Linkedin.com/in/naafi\"\n            target=\"https://www.linkedin.com/in/shreyaa-sridhar/\"\n          >\n            <i className=\"fab fa-linkedin-in\"></i>\n          </a>\n          <a\n            href=\"https://medium.com/@iam_naafi\"\n            target=\"https://www.linkedin.com/in/shreyaa-sridhar/\"\n          >\n            <i className=\"fab fa-medium-m\"></i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Introduction;\n","import React, { useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport USC from \"../../img/USC.jpg\";\nimport Amrita from \"../../img/Amrita.jpg\";\nimport Pdf from \"../../ShreyaaSridhar.pdf\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Timeline() {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n  return (\n    <div>\n      <Carousel activeIndex={index} onSelect={handleSelect}>\n        <Carousel.Item>\n          <img className=\"d-block w-100 op-6\" src={USC} alt=\"First slide\" />\n          <Carousel.Caption>\n            <h3>Master's in Computer Science </h3>\n            <p>\n              Viterbi School of Engineering, University of Southern California\n            </p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100 op-6\" src={Amrita} alt=\"Second slide\" />\n\n          <Carousel.Caption>\n            <h3>Bachelor's in Computer Science</h3>\n            <p>School of Engineering, Amrita Vishwa Vidyapeetham</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          \"padding-top\": \"25px\",\n        }}\n        class=\"ButtonContainer\"\n      >\n        <div\n          style={{\n            \"padding-top\": \"7px\",\n          }}\n        >\n          Download Resume here: &nbsp;\n        </div>\n        <tab />\n        <Button variant=\"outline-info\" href={Pdf}>\n          Resume\n        </Button>{\" \"}\n      </div>\n      <br />\n      <br />\n    </div>\n  );\n}\nexport default Timeline;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./Navigator.css\";\nclass Navigator extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand href=\"#home\">Shreyaa</Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"#\">Home</Nav.Link>\n          <Nav.Link href=\"#\">About</Nav.Link>\n          <Nav.Link href=\"#\">Skills</Nav.Link>\n          <Nav.Link href=\"#\">Work</Nav.Link>\n          <Nav.Link href=\"#\">Contact</Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\nexport default Navigator;\n","import React from \"react\";\nimport \"./App.css\";\nimport Introduction from \"./components/Introduction/Introduction\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport Navigator from \"./components/Navigator/Navigator\";\n\nfunction App() {\n  return (\n    <div>\n      <Navigator />\n      <Introduction />\n      <Timeline />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}